{"version":3,"sources":["components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/ItemAddForm/ItemAddForm.js","components/App/App.js","index.js"],"names":["AppHeader","_ref","statusMessage","react_default","a","createElement","Fragment","className","role","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","buttons","name","label","_this$props","this","filter","onFilterChange","map","cls","type","key","concat","onClick","_this$props2","toDo","done","placeholder","onChange","style","fontWeight","Component","TodoListItem","onDeleted","onToggleDone","onToggleImportant","important","TodoList","todos","elements","item","id","itemProps","Object","objectWithoutProperties","TodoListItem_TodoListItem_TodoListItem","assign","ItemAddForm","onLabelChange","event","toUpperCase","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","addItem","text","newItem","toConsumableArray","setTimeout","deleteItem","_ref2","idx","findIndex","el","slice","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","minHeight","paddingTop","background","components_AppHeader_AppHeader","SearchPanel_SearchPanel_SearchPanel","components_TodoList_TodoList","ItemAddForm_ItemAddForm_ItemAddForm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a170d7e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './AppHeader.css'\r\n\r\nconst AppHeader = ({statusMessage}) => {\r\n  return (\r\n        <>\r\n          <h1 className=\"AppHeader text-center\">My Todo List</h1>\r\n          <div className={statusMessage ? 'alert alert-danger' : 'alert'} role=\"alert\">\r\n            {statusMessage}\r\n          </div>\r\n        </>\r\n  )\r\n};\r\n\r\nexport default AppHeader;","import React, {Component} from \"react\";\r\nimport './SearchPanel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({term});\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n\r\n  buttons = [\r\n    {name: 'all', label: 'All'},\r\n    {name: 'active', label: 'Active'},\r\n    {name: 'done', label: 'Done'}\r\n  ];\r\n\r\n  render() {\r\n\r\n\r\n    const {filter, onFilterChange} = this.props;\r\n\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const isActive = filter === name;\r\n      const cls = isActive ? 'btn-success' : '';\r\n      return (\r\n            <button type=\"button\"\r\n                    key={name}\r\n                    className={`btn ${cls}`}\r\n                    onClick={() => onFilterChange(name)}>\r\n              {label}\r\n            </button>\r\n      )\r\n    });\r\n\r\n    const {toDo, done} = this.props;\r\n    return (\r\n          <div className='d-flex flex-column m-auto'>\r\n            <input className=\"SearchPanel form-control\" type=\"text\" placeholder={'Search'} value={this.state.term}\r\n                   onChange={this.onSearchChange}/>\r\n            <div className='d-flex justify-content-between align-items-center'>\r\n              <div className=\"btn-group\">\r\n                {buttons}\r\n              </div>\r\n              <span style={{fontWeight: '500'}}>{toDo} more to do, {done} done</span>\r\n            </div>\r\n          </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport './TodoListItem.css'\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  render() {\r\n    const {\r\n      label,\r\n      onDeleted,\r\n      onToggleDone,\r\n      onToggleImportant,\r\n      important,\r\n      done\r\n    } = this.props;\r\n\r\n    let className = 'TodoListItem d-flex justify-content-between align-items-center';\r\n    if (done) {\r\n      className += ' done'\r\n    }\r\n    if (important) {\r\n      className += ' important'\r\n    }\r\n\r\n    return (\r\n          <span className={className}>\r\n                <span onClick={onToggleDone}>\r\n                    {label}\r\n                    </span>\r\n                <span>\r\n                    <button type=\"button\" className=\"btn btn-outline-danger\" onClick={onDeleted}>\r\n                        <i className=\"far fa-trash-alt\"/>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-outline-success\" onClick={onToggleImportant}>\r\n                        <i className=\"far fa-star\"/>\r\n                    </button>\r\n                </span>\r\n            </span>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport TodoListItem from \"../TodoListItem/TodoListItem\";\r\nimport './TodoList.css'\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleDone, onToggleImportant}) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const {id, ...itemProps} = item;\r\n    return (\r\n          <li key={id} className=\"list-group-item\">\r\n            <TodoListItem\r\n                  {...itemProps}\r\n                  onDeleted={() => onDeleted(id)}\r\n                  onToggleDone={() => onToggleDone(id)}\r\n                  onToggleImportant={() => onToggleImportant(id)}\r\n            />\r\n          </li>\r\n    )\r\n  });\r\n  return (\r\n        <>\r\n          <ul className=\"list-group TodoList\">\r\n            {elements}\r\n          </ul>\r\n        </>\r\n  )\r\n};\r\nexport default TodoList;","import React, {Component} from \"react\";\r\nimport './ItemAddForm.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n  onLabelChange = (event) => {\r\n    this.setState({\r\n      label: event.target.value.toUpperCase()\r\n    })\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onItemAdded(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n          <form className=\"ItemAddForm d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n            <input\r\n                  type=\"text\"\r\n                  className='form-control'\r\n                  onChange={this.onLabelChange}\r\n                  placeholder='What needs to be done'\r\n                  value={this.state.label}\r\n            />\r\n            <button className='btn btn-success'>Add Item</button>\r\n          </form>\r\n    )\r\n  }\r\n}","import AppHeader from \"../AppHeader/AppHeader\";\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\nimport TodoList from \"../TodoList/TodoList\";\r\nimport React, {Component} from \"react\";\r\nimport ItemAddForm from \"../ItemAddForm/ItemAddForm\";\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Have a lunch'),\r\n    ],\r\n    term: '',\r\n    filter: 'all',  // active, all, done,\r\n    statusMessage: null\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label: label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  }\r\n\r\n  addItem = (text) => {\r\n    if (text !== '') {\r\n      const newItem = this.createTodoItem(text);\r\n      this.setState(({todoData}) => {\r\n        const newArray = [\r\n          ...todoData, newItem\r\n        ];\r\n        return {\r\n          todoData: newArray\r\n        }\r\n      })\r\n    } else {\r\n      this.setState({statusMessage: 'Please Enter Task'});\r\n      setTimeout(() => this.setState({statusMessage: ''}), 3000)\r\n    }\r\n\r\n  };\r\n\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData}) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n      return {\r\n        todoData: newArray\r\n      }\r\n    })\r\n  };\r\n\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = {\r\n      ...oldItem,\r\n      [propName]: !oldItem[propName]\r\n    };\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n\r\n  }\r\n\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      }\r\n    });\r\n  };\r\n\r\n  search(items, term) {\r\n\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label\r\n            .toLowerCase().indexOf(term.toLowerCase()) > -1\r\n    })\r\n  }\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({term})\r\n  };\r\n\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active' :\r\n        return items.filter((item) => !item.done);\r\n      case 'done' :\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter})\r\n  };\r\n\r\n  render() {\r\n    const WrapApp = {\r\n      minHeight: '100vh',\r\n      paddingTop: '5%',\r\n      background: '#9d8aec'\r\n    };\r\n\r\n    const {todoData, term, filter, statusMessage} = this.state;\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n          <div style={WrapApp}>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                  <AppHeader statusMessage={statusMessage}/>\r\n                  <SearchPanel\r\n                        toDo={todoCount}\r\n                        done={doneCount}\r\n                        onSearchChange={this.onSearchChange}\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}\r\n                  />\r\n                  <TodoList\r\n                        todos={visibleItems}\r\n                        onDeleted={this.deleteItem}\r\n                        onToggleImportant={this.onToggleImportant}\r\n                        onToggleDone={this.onToggleDone}\r\n                  />\r\n                  <ItemAddForm onItemAdded={this.addItem}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    )\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}